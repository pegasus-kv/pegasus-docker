name:  BuildThirdpartyDockerRegularly-build and publish thirdparty every week

on:
  push:
    paths:
      - 'thirdparties-src/**'
      - 'thirdparties-bin/**'
      - '.github/workflows/thirdparty-regular-push.yml'

  # for manually triggering workflow
  workflow_dispatch:
  
  # run for every week 2am UTC+8(Beijing)
  schedule:
    - cron:  '0 18 * * 1'

jobs:
  build_push_src_docker_images:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./thirdparties-src/Dockerfile
          push: true
          tags: |
            apachepegasus/thirdparties-src
          build-args: |
            REGISTRY_REPO=apachepegasus
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
        
  build_push_bin_docker_images:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        osversion:
          - ubuntu1604
          - ubuntu1804
          - ubuntu2004
          #- centos6 is EOL
          - centos7
    steps:
      -
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./thirdparties-bin/Dockerfile
          push: true
          tags: |
            apachepegasus/thirdparties-bin:${{ matrix.osversion }}
          build-args: |
            OS_VERSION=${{ matrix.osversion }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

